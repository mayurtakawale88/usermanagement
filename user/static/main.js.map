{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/header/header.component.css","webpack:///./src/app/header/header.component.html","webpack:///./src/app/header/header.component.ts","webpack:///./src/app/searchpipe.ts","webpack:///./src/app/user.service.ts","webpack:///./src/app/user/user.component.css","webpack:///./src/app/user/user.component.html","webpack:///./src/app/user/user.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<!--\\n<router-outlet></router-outlet>-->\\n<body class='app header-fixed sidebar-fixed aside-menu-fixed pace-done' [ngClass]='{\\\"sidebar-lg-show\\\":showSidebar === true}'>\\n    <header class=\\\"app-header navbar\\\">\\n        <button class=\\\"navbar-toggler sidebar-toggler d-lg-none mr-auto\\\" type=\\\"button\\\" data-toggle=\\\"sidebar-show\\\">\\n        <span class=\\\"navbar-toggler-icon\\\"></span>\\n        </button>\\n        <button class=\\\"navbar-toggler sidebar-toggler d-md-down-none\\\" type=\\\"button\\\" data-toggle=\\\"sidebar-lg-show\\\" (click)=\\\"toggleSidebar()\\\">\\n            <span class=\\\"navbar-toggler-icon\\\"></span>\\n        </button>\\n        <a class=\\\"navbar-brand d-md-down-none\\\" href=\\\"#\\\">\\n            <img class=\\\"navbar-brand-full\\\" src=\\\"/static/assets/images/protegrity_logo.png\\\" width=\\\"89\\\" height=\\\"25\\\" alt=\\\"CoreUI Logo\\\">\\n        </a>\\n    </header>\\n\\n    <div class=\\\"app-body\\\">\\n        <!-- slidebar -->\\n        <div class=\\\"sidebar\\\">\\n            <nav class=\\\"sidebar-nav ps\\\">\\n            <ul class=\\\"nav\\\">\\n              <li class=\\\"nav-item\\\">\\n                  <a class=\\\"nav-link active\\\" href=\\\"javascript:void(0);\\\">\\n                  <i class=\\\"nav-icon icon-user\\\"></i> User\\n                  </a>\\n              </li>\\n            </ul>\\n            <div class=\\\"ps__rail-x\\\" style=\\\"left: 0px; bottom: 0px;\\\"><div class=\\\"ps__thumb-x\\\" tabindex=\\\"0\\\" style=\\\"left: 0px; width: 0px;\\\"></div></div><div class=\\\"ps__rail-y\\\" style=\\\"top: 0px; right: 0px;\\\"><div class=\\\"ps__thumb-y\\\" tabindex=\\\"0\\\" style=\\\"top: 0px; height: 0px;\\\"></div></div></nav>\\n            \\n        </div>\\n\\n        <!-- Main container -->\\n        <main class=\\\"main\\\">\\n            <ol class=\\\"breadcrumb\\\">\\n                <li class=\\\"breadcrumb-item active\\\">User Management</li>  \\n            </ol>\\n            <app-user></app-user>\\n        </main>\\n    </div>\\n</body>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  showSidebar = true\n\n  toggleSidebar() {\n    this.showSidebar = !this.showSidebar;\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HeaderComponent } from './header/header.component';\nimport { UserComponent } from './user/user.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FilterPipe } from './searchpipe';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    UserComponent,\n    FilterPipe,\n  ],\n  imports: [\n    HttpClientModule,\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2hlYWRlci9oZWFkZXIuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<header class=\\\"header\\\">\\n    <nav class=\\\"navbar navbar-dark bg-dark\\\">\\n        <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarToggleExternalContent\\\" aria-controls=\\\"navbarToggleExternalContent\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n          <span class=\\\"navbar-toggler-icon\\\"></span>\\n          <img class=\\\"navbar-brand logo\\\" src=\\\"assets/images/protegrity_logo.png\\\">\\n        </button>\\n        \\n      </nav>\\n</header>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'filter'\n})\n\nexport class FilterPipe implements PipeTransform {\n\n    transform(items: any[], searchText: string): any[] {\n        if(!items) return [];\n        \n        if(!searchText) return items;\n        \n        searchText = searchText.toLowerCase();\n        \n        return items.filter( it => {\n            return it.username.toLowerCase().includes(searchText);\n        });\n   }\n}","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  constructor(public http: HttpClient) { \n  }\n\n  public getAllUser(): Observable<Object> {\n    return this.http.get('/users/?format=json');\n  }\n\n  public deleteUser(userid): Observable<Object> {\n    return this.http.delete('/user/'+userid+'/');\n  }\n\n  public getRoles(): Observable<Object>{\n    return this.http.get('/roles/');\n  }\n\n  public getUser(userid): Observable<Object>{\n    return this.http.get('/user/'+userid);\n  }\n\n  public addUser(user): Observable<Object>{\n    return this.http.post('/users/', user);\n  }\n\n  public updateUser(userid, user): Observable<Object>{\n    return this.http.put(`/user/${userid}/`, user);\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VzZXIvdXNlci5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"\\n\\n    <div class=\\\"container-fluid\\\">\\n          <div id=\\\"ui-view\\\">\\n              <div>\\n                  <div class=\\\"animated fadeIn\\\">\\n                      <div class=\\\"row\\\">\\n                            \\n                          <div class=\\\"col-sm-12\\\">\\n                              <div class=\\\"card\\\" *ngIf=\\\"page == 'list'\\\">\\n                                  <div class=\\\"card-header\\\">\\n                                      <strong>Manage User</strong>\\n                                  </div>\\n\\n                                  <div class=\\\"card-body\\\">\\n                                      <div class=\\\"dataTables_wrapper dt-bootstrap4 no-footer\\\">\\n                                              <div class=\\\"row\\\">\\n                                                  <div class=\\\"col-sm-12 col-md-6\\\">\\n                                                      <div class=\\\"dataTables_filter\\\">\\n                                                          <label>Search:<input [(ngModel)]=\\\"searchText\\\" type=\\\"search\\\" class=\\\"form-control form-control-sm\\\">\\n                                                          </label>\\n                                                      </div>\\n                                                  </div>\\n                                                  <div class=\\\"col-sm-12 col-md-6\\\">\\n                                                      <div class=\\\"dataTables_filter\\\">\\n                                                          <button class=\\\"btn btn-primary active float-right\\\" type=\\\"button\\\" aria-pressed=\\\"true\\\" (click)=\\\"page = 'add'; resetUser();\\\">Add User</button>\\n                                                      </div>\\n                                                  </div>\\n                                              </div>\\n                                              <div class=\\\"row\\\">\\n                                                  <div class=\\\"col-sm-12\\\">\\n                                                      <table class=\\\"table table-striped table-bordered datatable dataTable no-footer\\\" role=\\\"grid\\\" style=\\\"border-collapse: collapse !important\\\">\\n                                                          <thead>\\n                                                              <tr role=\\\"row\\\">\\n                                                                  <th class=\\\"sorting_asc\\\">\\n                                                                    Username\\n                                                                  </th>\\n                                                                  <th class=\\\"sorting\\\">\\n                                                                    Role\\n                                                                  </th>\\n                                                                  <th class=\\\"sorting\\\">\\n                                                                    Actions\\n                                                                  </th>\\n                                                              </tr>\\n                                                          </thead>\\n                                                          <tbody>\\n                                                              <tr role=\\\"row\\\" class=\\\"odd\\\" *ngFor=\\\"let user of userList | filter : searchText\\\">\\n                                                                  <td class=\\\"sorting_1\\\"><a href=\\\"javascript:void(0);\\\" (click)=\\\"editUserView(user.id)\\\">{{user.username}}</a></td>\\n                                                                  <td>\\n                                                                      <span *ngFor=\\\"let role of roleList\\\">\\n                                                                          <i *ngIf=\\\"isRoleSelected(user.roles,role.id)\\\">{{role.name}}</i>\\n                                                                      </span>&nbsp;\\n                                                                    </td>\\n                                                                  <td>\\n                                                                      <a class=\\\"btn btn-danger\\\" href=\\\"javascript:void(0);\\\" (click)=\\\"deleteUser(user.id)\\\">\\n                                                                          <img src=\\\"/static/assets/images/delete-button.png\\\" style=\\\"width:20px;height:20px;\\\">\\n                                                                      </a>\\n                                                                  </td>\\n                                                              </tr>\\n                                                              <tr *ngIf=\\\"userList.length === 0\\\">\\n                                                                  <td colspan=\\\"3\\\"> No result found </td>\\n                                                              </tr>\\n                                                              \\n                                                          </tbody>\\n                                                      </table>\\n                                                  </div>\\n                                            </div>\\n                                  \\n                                            <!--<div class=\\\"row\\\">\\n                                                <div class=\\\"col-sm-12 col-md-5\\\">\\n                                                    <div class=\\\"dataTables_info\\\" role=\\\"status\\\" aria-live=\\\"polite\\\"></div>\\n                                                </div>\\n                                                \\n                                                <div class=\\\"col-sm-12 col-md-7\\\">\\n                                                    <div class=\\\"dataTables_paginate paging_simple_numbers\\\" id=\\\"DataTables_Table_0_paginate\\\">\\n                                                        <ul class=\\\"pagination\\\">\\n                                                            <li class=\\\"paginate_button page-item previous disabled\\\" >\\n                                                                <a href=\\\"javascript:void(0);\\\" class=\\\"page-link\\\">Previous</a>\\n                                                            </li>\\n                                                            <li class=\\\"paginate_button page-item next\\\">\\n                                                                <a href=\\\"javascript:void(0);\\\" class=\\\"page-link\\\">Next</a>\\n                                                            </li>\\n                                                        </ul>\\n                                                    </div>\\n                                                </div>\\n                                            </div>-->\\n                                  \\n                                        </div>\\n                                  </div>\\n\\n                              </div>\\n\\n                              <div class=\\\"card\\\" *ngIf=\\\"page == 'add' || page == 'edit'\\\">\\n                                  <form method=\\\"post\\\" [formGroup]=\\\"userForm\\\" (ngSubmit)=\\\"saveUser()\\\">\\n                                      <div class=\\\"card-header\\\" *ngIf=\\\"page == 'add'\\\">\\n                                          <div class=\\\"row\\\">\\n                                            <div class=\\\"col-sm-9\\\">\\n                                                <strong>New User</strong>\\n                                            </div>\\n                                            <div class=\\\"col-sm-1\\\">\\n                                                    <strong><a href=\\\"javascript:void(0)\\\" (click)=\\\"page='list'\\\">Back</a></strong>\\n                                            </div>\\n                                            <div class=\\\"col-sm-1\\\">\\n                                                <button type=\\\"reset\\\" (click)=\\\"userForm.reset()\\\">Cancel</button>\\n                                            </div>\\n                                            <div class=\\\"col-sm-1\\\">\\n                                                <button type=\\\"submit\\\" [disabled]=\\\"!userForm.valid\\\">Save</button>\\n                                            </div>\\n                                          </div>\\n                                          \\n                                      </div>\\n\\n                                      <div class=\\\"card-header\\\" *ngIf=\\\"page == 'edit'\\\">\\n                                          <div class=\\\"row\\\">\\n                                            <div class=\\\"col-sm-10\\\">\\n                                                <strong><a href=\\\"javascript:void(0)\\\" (click)=\\\"page='list'\\\">Back</a></strong>\\n                                            </div>\\n                                            <div class=\\\"col-sm-1\\\">\\n                                                <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"!userForm.valid\\\">Save</button>\\n                                            </div>\\n                                            <div class=\\\"col-sm-1\\\">\\n                                                <a class=\\\"btn btn-danger\\\" href=\\\"javascript:void(0);\\\" (click)=\\\"deleteUser(userid); page='list'\\\">\\n                                                    <img src=\\\"/static/assets/images/delete-button.png\\\" style=\\\"width:20px;height:20px;\\\">\\n                                                </a>\\n                                            </div>\\n                                          </div>\\n                                          \\n                                      </div>\\n\\n                                      <div class=\\\"card-body\\\">\\n                                          <div class=\\\"card\\\">\\n                                              <div class=\\\"card-header\\\">\\n                                                <strong>General Information</strong>\\n                                              </div>\\n                                              <div class=\\\"card-body\\\">\\n                                                  <div class=\\\"dataTables_wrapper dt-bootstrap4 no-footer\\\">\\n                                                      \\n                                                          <div class=\\\"form-group\\\">\\n                                                              <label class=\\\"form-col-form-label\\\" for=\\\"first_name\\\">First Name</label>\\n                                                              <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"first_name\\\" [ngClass]=\\\"{'is-invalid':userForm.get('first_name').touched && userForm.get('first_name').errors}\\\" formControlName=\\\"first_name\\\" autocomplete=\\\"off\\\">\\n                                                              <span *ngIf=\\\"userForm.get('first_name').touched && userForm.get('first_name').errors\\\"\\n                                                                  class=\\\"invalid-feedback\\\">First name is required</span>\\n                                                              <div class='invalid-feedback'>{{userError.first_name}}</div>\\n                                                          </div>\\n                                              \\n                                                          <div class=\\\"form-group\\\">\\n                                                              <label class=\\\"form-col-form-label\\\" for=\\\"last_name\\\">Last Name</label>\\n                                                              <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"last_name\\\" [ngClass]=\\\"{'is-invalid':userForm.get('last_name').touched && userForm.get('last_name').errors}\\\" formControlName=\\\"last_name\\\" autocomplete=\\\"off\\\">\\n                                                              <span *ngIf=\\\"userForm.get('last_name').touched && userForm.get('last_name').errors\\\"\\n                                                                  class=\\\"invalid-feedback\\\">Last name is required</span>\\n                                                              <div class='invalid-feedback'>{{userError.last_name}}</div>\\n                                                          </div>\\n                                              \\n                                                          <div class=\\\"form-group\\\">\\n                                                              <label class=\\\"form-col-form-label\\\" for=\\\"username\\\">Username</label>\\n                                                              <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"username\\\" [ngClass]=\\\"{'is-invalid':userForm.get('username').touched && userForm.get('username').errors}\\\" formControlName=\\\"username\\\" autocomplete=\\\"off\\\">\\n                                                              <span *ngIf=\\\"userForm.get('username').touched && userForm.get('username').errors\\\"\\n                                                                  class=\\\"invalid-feedback\\\">Username is required</span>\\n                                                              <div class='invalid-feedback'>{{userError.username}}</div>\\n                                                          </div>\\n                                              \\n                                                          <div class=\\\"form-group\\\">\\n                                                              <label class=\\\"form-col-form-label\\\" for=\\\"description\\\">Description</label>\\n                                                              <textarea class=\\\"form-control\\\" id=\\\"description\\\" cols=\\\"9\\\" rows=\\\"2\\\" placeholder=\\\"Description..\\\" [ngClass]=\\\"{'is-invalid':userForm.get('description').touched && userForm.get('description').errors}\\\" formControlName=\\\"description\\\"></textarea>\\n                                                              <span *ngIf=\\\"userForm.get('username').touched && userForm.get('username').errors\\\"\\n                                                                  class=\\\"invalid-feedback\\\">Description is required</span>\\n                                                              <div class='invalid-feedback'>{{userError.description}}</div>\\n                                                          </div>\\n                                                          \\n                                                          \\n                                                        \\n                                                        \\n                                                    </div>\\n                                              </div>\\n                                          </div>\\n\\n                                          <div class=\\\"card\\\">\\n                                              <div class=\\\"card-header\\\">\\n                                                <strong>Roles</strong>\\n                                              </div>\\n                                              <div class=\\\"card-body\\\">\\n                                                  <div class=\\\"dataTables_wrapper dt-bootstrap4 no-footer\\\">\\n                                                      <div class=\\\"row\\\">\\n                                                          <div class=\\\"col-sm-12 col-md-6\\\">\\n                                                              <div class=\\\"dataTables_filter\\\">\\n                                                                  <label><i>Select roles from the list below: <strong>{{this.userForm.controls.roles.value.length}} selected</strong></i></label>\\n                                                              </div>\\n                                                          </div>\\n                                                      </div>\\n                                                      <div class=\\\"row\\\">\\n                                                          <div class=\\\"col-sm-12\\\">\\n                                                              <table class=\\\"table table-striped table-bordered datatable dataTable no-footer\\\" role=\\\"grid\\\" style=\\\"border-collapse: collapse !important\\\">\\n                                                                  <thead>\\n                                                                      <tr role=\\\"row\\\">\\n                                                                          <th>\\n                                                                              <div class=\\\"form-group\\\">\\n                                                                                  <input type=\\\"checkbox\\\" (change)=\\\"selectAll($event.target.checked)\\\">\\n                                                                              </div>\\n                                                                          </th>\\n                                                                          <th>\\n                                                                            Role name\\n                                                                          </th>\\n                                                                          <th>\\n                                                                            Description\\n                                                                          </th>\\n                                                                          <th>\\n                                                                            Roles\\n                                                                          </th>\\n                                                                      </tr>\\n                                                                  </thead>\\n                                                                  <tbody>\\n                                                                      <tr role=\\\"row\\\" *ngFor=\\\"let role of roleList; let i = index\\\">\\n                                                                          <td>\\n                                                                              <div class=\\\"form-group\\\" formArrayName=\\\"roles\\\">\\n                                                                                  <input type=\\\"checkbox\\\" [checked]=\\\"role.selected? role.selected : false\\\" (change)=\\\"onChange(i, $event.target.checked)\\\">\\n                                                                              </div>\\n                                                                          </td>\\n                                                                          <td>{{role.name}}</td>\\n                                                                          <td>{{role.description}}</td>\\n                                                                          <td>{{role.roles}}</td>\\n                                                                      </tr>\\n                                                                      \\n                                                                  </tbody>\\n                                                              </table>\\n                                                          </div>\\n                                                    </div>\\n                                          \\n                                                </div>\\n                                              </div>\\n                                          </div>\\n                                      </div>\\n\\n                                  </form>  \\n\\n                              </div>\\n                              \\n                          </div>\\n                          \\n                      </div>\\n                  </div>\\n              </div>\\n          </div>\\n    </div>\\n\\n\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { UserService } from '../user.service';\nimport { FormBuilder, FormGroup, Validators, FormArray, FormControl } from '@angular/forms';\n\n@Component({\n  selector: 'app-user',\n  templateUrl: './user.component.html',\n  styleUrls: ['./user.component.css']\n})\nexport class UserComponent implements OnInit  {\n\n\n  userList = [];\n  userid = 0;\n  searchText = '';\n  public userForm: FormGroup;\n  page = 'list';\n  roleList = [];\n  userError = {};\n  selectedRole = [];\n\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private _userService: UserService) { \n      this.getRoles();\n      this._userService.getAllUser().subscribe(result => {\n        if(result['results']){\n          this.userList = result['results'];\n        }\n\n        \n      });\n  }\n\n\n  ngOnInit() {\n    this.userForm = this.formBuilder.group({\n      first_name: ['', Validators.required],\n      last_name: ['', Validators.required],\n      username: ['', Validators.required],\n      description: ['', Validators.required],\n      roles: this.formBuilder.array([])\n    });\n\n    this.userError = {\n      first_name: \"\",\n      last_name : \"\",\n      username: \"\",\n      description: \"\",\n      roles: []\n    };\n  }\n\n  deleteUser(userid) {\n    this._userService.deleteUser(userid).subscribe(result => {\n      this.userList = this.userList.filter(function(user){\n          return user.id != userid;\n      });\n      \n    });\n  }\n\n  saveUser() {\n    let user = this.userForm.value;\n    user['roles'] = <FormArray>this.userForm.controls.roles.value;\n    if (this.page == 'add') {\n      this._userService.addUser(user).subscribe(result => {\n          if (result) {\n            this.userForm.reset();\n            alert(\"User Added\");\n          }\n      });\n    } else if (this.page == 'edit') {\n      this._userService.updateUser(this.userid, user).subscribe(result => {\n        if (result) {\n          alert(\"User updated\");\n        }\n      });\n    }\n  }\n\n  editUserView(userid) {\n    this.userid = userid;\n    this.selectAll(false);\n    this._userService.getUser(userid).subscribe(result => {\n        if (result) {\n          this.page = \"edit\";\n          let roles = [];\n          \n          if (result['roles'].length > 0) {\n            roles = result['roles'].map(function (x) { \n              return parseInt(x, 10); \n            });\n          }\n\n          this.userForm.patchValue({\n            username: result['username'],\n            first_name: result['first_name'],\n            last_name: result['last_name'],\n            description: result['description']\n          });\n          this.userForm.setControl('roles', this.formBuilder.array(roles || []));\n          this.selectRoles(roles);\n        }\n    });\n  }\n\n  getRoles() {\n    this._userService.getRoles().subscribe(result => {\n        if (result['results']) {\n          this.roleList = result['results'];\n        }\n    });\n    const result = {\"count\":4,\"next\":null,\"previous\":null,\"results\":[{\"id\":1,\"name\":\"Security Administrator Viewer\",\"roles\":\"Security Viewer, Cloud Gateway Viewer,Applinace CLI Viewer, Applicance web viewer\",\"description\":\"Security administrator viewer role\"},{\"id\":2,\"name\":\"Shell accounts\",\"roles\":\"shell(non-CLI) Access\",\"description\":\"Accounts that have shell access\"},{\"id\":3,\"name\":\"Secutrity Administrator\",\"roles\":\"Security Viewer, Cloud Gateway Viewer,Applinace CLI Viewer, Applicance web viewer,shell(non-CLI) Access\",\"description\":\"Secutrity Administrator role\"},{\"id\":4,\"name\":\"Director Administrator\",\"roles\":\"Director manager\",\"description\":\"Local LDAP Administrator role\"}]};\n    this.roleList = result[\"results\"];\n  }\n\n\n  selectRoles(roles) {\n    for(let i =0; i< this.roleList.length; i ++) {\n        if (roles.includes(this.roleList[i]['id'])) {\n          this.roleList[i]['selected'] = true;\n        } \n    }\n  }\n\n  selectAll(isChecked) {\n    const roles = <FormArray>this.userForm.controls.roles;\n    roles.controls = [];\n    this.roleList.forEach((value, index) => {\n        this.onChange(index,isChecked);\n    });\n  }\n\n  buildRoles() {\n    const arr = this.roleList.map(role => {\n     \n      return this.formBuilder.control(role.selected);\n    });\n    return this.formBuilder.array(arr);\n  }\n\n  onChange(index, isChecked) {\n    const roles = <FormArray>this.userForm.controls.roles;\n    \n    if(isChecked) {\n      this.roleList[index]['selected'] = true;\n      roles.push(this.formBuilder.control(this.roleList[index]['id']));\n    } else {\n      this.roleList[index]['selected'] = false;\n      let ind = roles.controls.findIndex(x => x.value == this.roleList[index]['id'])\n      roles.removeAt(ind);\n    }\n  }\n\n  isRoleSelected(userRoles, roleId) {\n    let roles = userRoles.map(function (x) { \n      return parseInt(x, 10); \n    });\n    if (roles.includes(roleId)) {\n      return true;\n    }\n    return false;\n  }\n\n  resetUser() {\n    this.selectAll(false);\n    this.userForm.reset();\n  }\n\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}